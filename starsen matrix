#include <bits/stdc++.h>
#include <algorithm>
using namespace std;
#define ll long long int
#define vect vector

vect<vect<ll> > operator+ (vect<vect<ll> > a, vect<vect<ll> > b)
{
    if(a.size()==0||b.size()==0)
    {
        vect<vect<ll> > c;

        return c;
    }

    vect<vect<ll> > c(a.size(), vect<ll> (a[0].size()));

    for(ll i=0;i<a.size();i++)
    {
        for(ll j=0;j<a[i].size();j++)
        {
            c[i][j]=a[i][j]+b[i][j];
        }
    }

    return c;

} 

vect<vect<ll> > operator- (vect<vect<ll> > a, vect<vect<ll> > b)
{
    if(a.size()==0||b.size()==0)
    {
        vect<vect<ll> > c;

        return c;
    }

    vect<vect<ll> > c(a.size(), vect<ll> (a[0].size()));

    for(ll i=0;i<a.size();i++)
    {
        for(ll j=0;j<a[i].size();j++)
        {
            c[i][j]=a[i][j]-b[i][j];
        }
    }

    return c;

}

vect<vect<ll> >  operator* (vect<vect<ll> > aa, vect<vect<ll> > bb)
{
    ll n;
    n=aa.size();
    if(n==1)
    {
        vect<vect<ll> > c=aa;
        c[0][0]*=bb[0][0];

        return c;
    }

    vect<vect<ll> > a(n/2,vect<ll> (n/2)),b(n/2,vect<ll> (n/2)),c(n/2,vect<ll> (n/2)),d(n/2,vect<ll> (n/2)),e(n/2,vect<ll> (n/2)),f(n/2,vect<ll> (n/2)),g(n/2,vect<ll> (n/2)),h(n/2,vect<ll> (n/2));

    for(ll i=0;i<n/2;i++)
    {
        for(ll j=0;j<n/2;j++)
        {
            a[i][j]=aa[i][j];
            b[i][j]=aa[i][n/2+j];
            c[i][j]=aa[i+n/2][j];
            d[i][j]=aa[i+n/2][j+n/2];
            e[i][j]=bb[i][j];
            f[i][j]=bb[i][n/2+j];
            g[i][j]=bb[i+n/2][j];
            h[i][j]=bb[i+n/2][j+n/2];
        }
    }

    vect<vect<ll> > p1(n/2,vect<ll> (n/2)),p2(n/2,vect<ll> (n/2)),p3(n/2,vect<ll> (n/2)),p4(n/2,vect<ll> (n/2)),p5(n/2,vect<ll> (n/2)),p6(n/2,vect<ll> (n/2)),p7(n/2,vect<ll> (n/2));

    p1=a*(f-h);
    p2=(a+b)*h;
    p3=(c+d)*e;
    p4=d*(g-e);
    p5=(a+d)*(e+h);
    p6=(b-d)*(g+h);
    p7=(a-c)*(e+f);

    a=p5+p4+p6-p2;
    b=p1+p2;
    c=p3+p4;
    d=p1+p5-p3-p7;

     for(ll i=0;i<n/2;i++)
    {
        for(ll j=0;j<n/2;j++)
        {
            aa[i][j]=a[i][j];
            aa[i][n/2+j]=b[i][j];
            aa[i+n/2][j]=c[i][j];
            aa[i+n/2][j+n/2]=d[i][j];
        }
    }

    return aa;
}

int main(){
    ll t=1;

    while(t--)
    {
        cout<<"Here we are going to enter values for rows and columns which will be power of 2.";
    	cout<<"Here no of rows and columns will be equal. ";
    	cout<<endl;
        ll n;
        cout<<" Please Enter number of rows and columns: ";
        
        cin>>n;

        vect<vect<ll> > aa(n, vect<ll> (n)),bb(n, vect<ll> (n));

        cout<<"Now enter the values of 1st matrix: ";
        cout<<endl;

        for(ll i=0;i<n;i++)
        {
            for(ll j=0;j<n;j++)
            cin>>aa[i][j];
        }
        cout<<"Now enter the values of 2nd matrix: ";
        cout<<endl;

        for(ll i=0;i<n;i++)
        {
            for(ll j=0;j<n;j++)
            cin>>bb[i][j];
        }

        clock_t s,e;

        s=clock();

        vect<vect<ll> > c=aa*bb;

        e=clock();

        cout<<endl;

        cout<<"The Multiplication of matrix is: ";

        cout<<endl;

        for(ll i=0;i<n;i++)
        {
            for(ll j=0;j<n;j++)
            cout<<c[i][j]<<" ";
            cout<<endl;
        }

        double tt=double(e-s)/double(CLOCKS_PER_SEC);

        cout<<endl;
        cout<<endl;

        cout<<"Time take by this multipication algorithm having matrix size: "<<n<<'*'<<n<<" is: "<<double(tt)<<" sec.";
    }
    return 0;
}
